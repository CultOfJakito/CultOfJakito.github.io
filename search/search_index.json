{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome","text":"<p>Here you will learn how to mod Ultrakill</p> <p></p>"},{"location":"#contributing","title":"Contributing","text":"<p>If you want to contribute to this wiki, head over to the repository and read the README</p>"},{"location":"getting-started/1-prerequisites/","title":"Before starting","text":""},{"location":"getting-started/1-prerequisites/#prerequisites","title":"Prerequisites","text":"<p>To get started you're gonna need a few things:  </p> <ul> <li>Ultrakill (obviously)</li> <li>Some C# and/or Unity knowledge</li> <li>Visual Studio with support for C# installed or JetBrains Rider (VSCode or any other IDE can work but its easier to use Visual Studio)</li> <li>BepInEx already setup</li> </ul>"},{"location":"getting-started/2-starting/","title":"Where do I start","text":""},{"location":"getting-started/2-starting/#first-things-first","title":"First things first","text":"<p>There are two types of mods for Ultrakill. BepInEx and UMM. We'll explain the differences later but for now, we'll be using BepInEx. Switching later should be easy as breathing if you understand the basics.  </p> <p>To start, create a new BepInEx project using this command  </p> <p><pre><code>dotnet new bepinex5plugin -n &lt;plugin name&gt; -T netstandard2.0 -U 2019.4.16\n</code></pre> or the convenient batch script I made (if you're on Windows)  <pre><code>@echo off\nset /p name=Mod name: \ndotnet new bepinex5plugin -n %name% -T netstandard2.0 -U 2019.4.16\n</code></pre></p> <p>When done, you should have a folder with the name of your mod where you ran the command. Open it, there should be 3 files <code>NuGet.Config</code>,<code>Plugin.cs</code> and <code>&lt;plugin name&gt;.csproj</code>. Open the <code>.csproj</code> file with Visual Studio (or your prefered IDE)</p> <p>Warning</p> <p>If you are using Visual Studio Code, doing so will open the file, not the project. Open the directory with VSCode instead.</p> <p>Once Visual Studio finishes loading, select <code>Plugin.cs</code> in the Solution explorer and you should see something like this  Default BepInEx Plugin<pre><code>using BepInEx; //(1)!\nnamespace Plugin\n{\n[BepInPlugin(PluginInfo.PLUGIN_GUID, PluginInfo.PLUGIN_NAME, PluginInfo.PLUGIN_VERSION)] //(2)!\npublic class Plugin : BaseUnityPlugin\n{\nprivate void Awake() //(3)!\n{\n// Plugin startup logic\nLogger.LogInfo($\"Plugin {PluginInfo.PLUGIN_GUID} is loaded!\");\n}\n}\n}\n</code></pre></p> <ol> <li> <p>This line is basicaly telling our IDE and the compiler that we're using the BepInEx namespace and everything inside.</p> </li> <li> <p>WIP</p> </li> <li> <p>This part will be the first to be called when the game starts and the mod is loaded</p> </li> </ol> <p>If you don't, you messed something up and V1 is rapidly approaching your house. I'll start by explaining what most of the stuff here is (if you never touched C# or Unity before).  </p>"}]}